print()
'''
파이선 논리값 : True, False
파이선에서는 True와 False로 최종 평가할 수 있는 것은 모두 논리 연산으로 쓸 수 있음
최종 평가 확인은 bool에 값을 넣어 호출해보면 확인할 수 있다.
'''
# 숫자 확인
print(bool(0), bool(1), bool(-1), bool(-2395))
# 0만 False이고 나머지는 True로 평가

print('---------------------------------------------------------------')
# 리스트 확인
print(bool([]), bool([1]), bool([-1]), bool([-2395]))
# 비어있는 리스트는 False, 값이 하나라도 있으면 True

print('---------------------------------------------------------------')
# 딕셔너리
print(bool({}), bool({'key1': 'value1'}))
# 비어있는 딕셔너리는 False, 값이 하나라도 있으면 True

print('---------------------------------------------------------------')
# 문자열
print(bool(None), bool(''), bool('hihi'))  # None은 공백('')이랑 같음
# 값이 없는 문자열은 False, 값이 있으면 True

print('---------------------------------------------------------------')
# 최종 평가 특성을 이용하는 예
if 'hihi':  # 최종평가에 의해 True로 인식함
    print('hello')

if '':  # 최종평가에서 False가 됬으므로 실행안됨
    print('None')

print('---------------------------------------------------------------')
if []:      # X
    print('[] is True')
if [1, 2, 3]:       # O
    print('True')
if {}:      # X
    print('True')
if{'key1', 'value1'}:       # O
    print('True')
if 0:       # X
    print('True')
if 1:       # O
    print('True')

print('---------------------------------------------------------------')
# 보니까 우측을 기본적으로 flase로 인식하는 듯, 그래서 입력안주면 0*0 = 0, 우측 false 출력
# => 좌측의 input에 의해 엔터를 치면 우측을 읽지않고 다음 라인으로 넘어감에 따라 우측이 false 로 인식되는 것
value = input('입력하세요:') or '입력하지 않으셨습니다'

print('입력값:', value)

# 아래의 경우 input값을 넣어줘도 우측을 좌측과 관련없는 false로 인식해서 최종이 false인 입력안하~ 됨
value = input('입력하세요:') and '입력하지 않으셨습니다'













