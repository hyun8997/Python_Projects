print()
'''
튜플을 이용해서 변수 하나에 여러 값을 여러 개 대입할 수 있음
패킹 - 하나의 변수에 여러 개의 값을 대입
언패킹 - 패킹된 변수에서 여러 개의 값을 꺼내오는 것
'''

a, b = 1, 2  # 이렇게 넣어도 됨

print(a, b)  # 튜플이 이루어진 상태 : a=1, b=2

c = (3, 4)  # 변수 c에 튜플로 3, 4 대입
# 언패킹
d, e = c  # 튜플 값을 그대로 각 변수에 넣을 수 있다. 코드 간결해짐
print(d, e)
# 패킹
f = d, e
print(f)

print('----------------------------------------------------------')
# 데이터 맞바꿈
x = 5
y = 10

temp = x
x = y
y = temp
print(x, y)  # 이런 일반적인 경우 temp를 통해 서로 돌려서 바꿈

print('----------------------------------------------------------')
# 튜플로 맞바꿈
x, y = y, x
print(x, y)

print('-----------------------------------------------------------------')
# 여러개의 값을 반환할 때 유용
def tuple_fun():
    return 1, 2

num1, num2 = tuple_fun()
print(num1, num2)
print(type(tuple_fun()))

print('-------------------------------------------------------------')
list = [1, 2, 3, 4, 5]
for i, v in enumerate(list):
    print('{}번째 값:{}'.format(i, v))

print('-------------------------------------------------------------')
# enumerate 사용할 때 변수를 하나만 쓰면 자동으로 그 변수를 튜플로 인식한다
for j in enumerate(list):
    print('{}번째 값:{}'.format(j[0], j[1]))

print('-------------------------------------------------------------')
for k in enumerate(list):
    print('{}번째 값:{}'.format(*k))  # * 사용, 알아서 인자 넣도록

print('-------------------------------------------------------------')
# 딕셔너리
result = {'java':90, 'jsp':100, 'spring':80}
for key, value in result.items():
    print('{} 과목 점수는 {}입니다.'.format(key, value))

for i in result.items():   # 딕셔너리의 키와 값을 튜플 i로 자동 변환
    print('{} 과목 점수는 {}입니다.'.format(i[0], i[1]))

for i in result.items():   # 딕셔너리의 키와 값을 튜플 i로 자동 변환
    print('{} 과목 점수는 {}입니다.'.format(*i))

print('-------------------------------------------------------------')































